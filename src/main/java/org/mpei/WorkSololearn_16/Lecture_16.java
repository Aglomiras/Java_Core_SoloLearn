package org.mpei.WorkSololearn_16;

public class Lecture_16 {
    /**
     * ПРОБЛЕМЫ, КОТОРЫЕ МОГУТ ВОЗНИКНУТЬ В ХОДЕ РАБОТЫ.
     *
     * 1. Общие переменные потока
     * Каждый поток содержит свои локальные переменные.
     * Помимо локальных, потоки могут взаимодействовать и с общими переменными.
     *
     * Пример можно рассмотреть в Practic_1.
     *
     * Проблема № 1: несогласованные переменные
     * Итак, что же может пойти не так в многопоточной среде?
     * Допустим, двум потокам доступна точка с координатами (0,0). Один поток хочет поменять координаты на (100,100),
     * другой - вывести координаты в консоль. Мы ожидаем увидеть в консоли либо (0,0), либо (100, 100) в зависимости
     * от того, какой поток выполнится быстрее. Но если нам не повезёт с таймингом, второй поток напечатает
     * координаты (100, 0). Такой точки не существует сейчас в системе, и это значение некорректно.
     *
     * Пример данной проблеме, можно рассмотреть в Practic_2.
     *
     *
     * Проблема №2: потерянный апдейт
     * Посмотрим на классический пример. Два потока увеличивают значение счётчика 10 тысяч раз.
     * В конце работы мы ожидаем, что в консоль напечатается 20000. Но на самом деле, мы увидим другие числа, которые будут далеки
     * от 20000.
     *
     * Пример данной проблемы, можно посмотреть в Practic_3.
     *
     * Почему так произошло?
     * Операция инкремента - составная, и включает в себя 3 шага:
     * - прочитать текущее значение count во временную переменную (допустим tmp)
     * - увеличить значение tmp на 1
     * - записать значение tmp в переменную count
     *
     * Если оба потока на первом шаге считают одно и то же значение, то изменения одного потока будут
     * перетёрты изменениями другого.
     *
     *
     * Проблема №3: потоки не видят изменений, сделанных другими потоками
     * Рассмотрим сразу пример в Practic_4.
     *
     *
     * Что НЕ считается потерянным апдейтом?
     * Рассмотрим пример в Practic_5
     *
     * Что НЕ считается проблемой видимости?
     * Рассмотрим пример в Practic_6
     *
     *
     * Верно определить проблему - очень важно:
     * - Для разных проблем подходят разные инструменты
     * - В определённых ситуациях проблема не является проблемой
     * */
}
