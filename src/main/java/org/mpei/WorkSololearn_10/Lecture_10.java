package org.mpei.WorkSololearn_10;

public class Lecture_10 {
    public static void main(String[] args) {
        /**
         * -----ИСКЛЮЧЕНИЯ-----
         * Исключение это проблема, возникающая во время выполнения программы. Исключения вызывают ненормальное завершение программы.
         *
         * Обработка исключений является мощным механизмом, который обрабатывает ошибки времени выполнения для поддержки нормального потока приложения.
         *
         * Исключения могут возникать по многим различным причинам. Несколько примеров:
         * - Пользователь ввел неверную информацию.
         * - Файл, который должен быть открыт, не найден.
         * - В середине коммуникации было потеряно сетевое соединение.
         * - Недостаток памяти и другие причины, относящиеся к физическим ресурсам.
         *
         * Как видите, исключения возникают при пользовательской ошибке, ошибке программиста, или по причине физических ресурсов.
         * Однако, хорошо написанная программа должна обрабатывать все возможные исключения.
         *
         * Обработка Исключений
         * Исключения могут быть обработаны с помощью комбинации ключевых слов try и catch.
         * Блок try/catch размещается вокруг кода, который может сгенерировать исключение.
         *
         * Оператор catch вовлекает объявление типа исключения, которое вы пытаетесь обработать.
         * Если исключение возникает в блоке try, то будет проверен следующий за ним блок catch.
         * Если тип возникшего исключения описан в блоке catch, то исключение передается в блок catch,
         * так же, как передается аргумент в параметр метода.
         *
         * Тип Exception может использоваться для обработки всех возможных исключений.
         * Пример обработки исключений продемонстрирован в папке Starter
         *
         * -----throw-----
         * Ключевое слово throw позволяет вам вручную генерировать исключения из ваших методов.
         * Некоторые из множества доступных типов исключений включают IndexOutOfBoundsException, IllegalArgumentException, ArithmeticException, и другие.
         * Например, мы можем использовать исключение ArithmeticException в нашем методе, если параметр равен 0.
         * Пример в папке Starter_1
         *
         * Один блок try может содержать множество блоков catch, которые отдельно обрабатывают различные исключения.
         * Все блоки catch должны быть упорядочены от наиболее специфичных к более общим.
         * Следом за специфическими исключениями, вы можете использовать тип Exception для обработки всех других исключений в последнем catch.
         * */
    }
}
